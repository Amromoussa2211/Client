name: Android Emulator CI with WebDriverIO

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up Android SDK directories
        run: |
          mkdir -p $HOME/android-sdk/cmdline-tools/latest
          mkdir -p $HOME/android-sdk/emulator
          mkdir -p $HOME/android-sdk/platform-tools
          mkdir -p $HOME/android-sdk/platforms
          mkdir -p $HOME/android-sdk/system-images

      - name: Set up Android environment variables
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          echo "ANDROID_SDK_ROOT=$HOME/android-sdk" >> $GITHUB_ENV
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          chmod -R 777 $HOME/android-sdk

      - name: Set up Android Command Line Tools
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-9123335_latest.zip -O commandlinetools.zip
          unzip -d $ANDROID_HOME/cmdline-tools/latest commandlinetools.zip
          rm commandlinetools.zip

      - name: Verify sdkmanager is in PATH
        run: which sdkmanager

      - name: Update SDK Repositories
        run: yes | sdkmanager --update

      - name: Install platform-tools
        run: sdkmanager --install "platform-tools"

      - name: Install emulator
        run: sdkmanager --install "emulator"

      - name: Install platforms
        run: sdkmanager --install "platforms;android-30"

      - name: Install system-images
        run: sdkmanager --install "system-images;android-30;default;arm64-v8a"

      - name: Verify SDK Setup
        run: |
          echo "Listing installed packages..."
          sdkmanager --list
          echo "Checking directory structure..."
          ls -la $ANDROID_HOME

      - name: Create and Start Emulator
        run: |
          echo no | avdmanager create avd --force -n test --abi "default/arm64-v8a" --package "system-images;android-30;default;arm64-v8a" --device "Nexus 6"
          emulator -avd test -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -no-snapshot -memory 2048 -cores 2 &
          adb wait-for-device
          adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
          sleep 30
          adb shell getprop sys.boot_completed
          adb shell logcat -d > logcat_output.txt
          cat logcat_output.txt

      - name: Disable Animations
        run: |
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0

      - name: Download APK
        run: |
          mkdir -p ./apps
          curl -L -o ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk https://github.com/Amromoussa2211/client/releases/download/v1.0.0/app-release-v15-0.3.2-2024-12-25-18-13.apk

      - name: Install APK on Emulator
        run: adb install ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk

      - name: Start Appium Server
        run: |
          npm install -g appium@2
          appium --base-path /wd/hub &
          for i in {1..10}; do
            if curl -s localhost:4723/wd/hub/status | grep -q "status"; then
              echo "Appium server started"
              break
            fi
            sleep 5
          done

      - name: Run WebDriverIO Tests
        run: npx wdio run ./wdio.ci.conf.js

      - name: Force Stop Emulator
        run: |
          adb emu kill
          pkill -f "emulator" || true
