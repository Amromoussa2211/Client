name: Android E2E Tests (Fixed Appium Path)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  e2e-tests:
    runs-on: macos-latest  # Use macOS runner for hardware acceleration

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18

    - name: Set up Android SDK
      uses: android-actions/setup-android@v2

    - name: Install Android Emulator and System Image
      run: |
        echo "Installing Android Emulator and System Image..."
        yes | sdkmanager --install "system-images;android-30;google_apis;arm64-v8a"  # Use ARM64 image
        yes | sdkmanager --install "emulator"
        yes | sdkmanager --install "platform-tools"
        yes | sdkmanager --install "platforms;android-30"
        yes | sdkmanager --install "build-tools;34.0.0"

    - name: Create Android Virtual Device (AVD)
      run: |
        echo "Creating Android Virtual Device (AVD)..."
        echo "no" | avdmanager create avd --force \
          --name "test" \
          --package "system-images;android-30;google_apis;arm64-v8a" \  # Use ARM64 image
          --device "pixel_4" \
          --tag "google_apis" \
          --abi "arm64-v8a"  # Use ARM64 ABI

    - name: Start Android Emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        target: google_apis
        arch: arm64-v8a  # Use ARM64 architecture
        profile: pixel_4  # Use the correct profile name
        emulator-options: "-no-window -no-audio -gpu swiftshader_indirect -no-boot-anim"
        disable-animations: true
        force-avd-creation: true
        cores: 2
        avd-name: test
        emulator-boot-timeout: 1200
        emulator-port: 5554
        disable-spellchecker: false
        disable-linux-hw-accel: false
        enable-hw-keyboard: false
        channel: stable
        script: |
          echo "Starting Android Emulator..."
          adb wait-for-device
          echo "Emulator is ready!"

    - name: Wait for Emulator to Boot
      run: |
        echo "Waiting for emulator to boot..."
        adb wait-for-device
        while [[ "$(adb shell getprop sys.boot_completed | tr -d '\r')" != "1" ]]; do
          sleep 5
          echo "Waiting for emulator to boot..."
        done
        echo "Emulator booted successfully!"

    - name: Download and install APK
      run: |
        mkdir -p apps
        curl -L -o ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk https://github.com/Amromoussa2211/client/releases/download/v1.0.0/app-release-v15-0.3.2-2024-12-25-18-13.apk
        adb install ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk

    - name: Run E2E tests
      env:
        DEVICE_NAME: "emulator-5554"
        APK_PATH: "./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk"
        APPIUM_HOST: "localhost"
        APPIUM_PORT: "4723"
        APPIUM_PATH: "/"
      run: npm run test:ci