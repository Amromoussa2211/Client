name: Android Emulator CI with WebDriverIO

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm ci

      # Step 4: Enable KVM for hardware acceleration
      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm

      # Step 5: Cache AVD to speed up subsequent runs
      - name: Cache AVD
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-30  # Change this key if the API level changes

      # Step 6: Set up Android SDK and Emulator
      - name: Set up Android SDK
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          avd-name: test
          emulator-options: "-no-window -gpu swiftshader_indirect -noaudio -no-boot-anim"
          disable-animations: true
          script: |
            sdkmanager --install "system-images;android-30;google_apis;x86_64"
            sdkmanager --install "emulator"
            sdkmanager --install "platform-tools"
            echo no | avdmanager create avd --force -n test --abi "google_apis/x86_64" --package "system-images;android-30;google_apis;x86_64" --device "Nexus 6"

      # Step 7: Wait for Emulator to Boot
      - name: Wait for Emulator to Boot
        run: |
          adb wait-for-device
          adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
          sleep 30 # Additional delay to ensure the system is fully initialized

      # Step 8: Install APK on Emulator
      - name: Install APK on Emulator
        run: |
          adb install ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk

      # Step 9: Start Appium Server
      - name: Start Appium server
        run: |
          npm install -g appium@2
          appium --base-path /wd/hub &
          # Wait for Appium to start
          for i in {1..10}; do
            if curl -s localhost:4723/wd/hub/status | grep -q "status"; then
              echo "Appium server started"
              break
            fi
            sleep 5
          done

      # Step 10: Run WebDriverIO Tests
      - name: Run WebDriverIO tests
        run: |
          npx wdio run ./wdio.ci.conf.js