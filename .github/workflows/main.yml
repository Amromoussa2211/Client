name: Android Emulator CI with WebDriverIO

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm ci

    # Step 4: Clear SDK Cache
    - name: Clear SDK Cache
      run: |
        rm -rf $ANDROID_HOME/repository2-1.xml
        rm -rf $ANDROID_HOME/repository2-1.xml.cache

    # Step 5: Update SDK Repositories
    - name: Update SDK Repositories
      run: |
        mkdir -p $ANDROID_HOME/repositories.cfg
        touch $ANDROID_HOME/repositories.cfg
        yes | sdkmanager --update

    # Step 6: Set up Android SDK
    - name: Set up Android SDK
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        target: google_apis_playstore # Use Google APIs with Play Store
        arch: x86
        profile: Nexus 6
        avd-name: test
        emulator-options: "-no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -memory 2048 -cores 2"
        disable-animations: true
        script: |
          sdkmanager --install "system-images;android-30;google_apis_playstore;x86"
          sdkmanager --install "emulator"
          sdkmanager --install "platform-tools"
          echo no | avdmanager create avd --force -n test --abi "google_apis_playstore/x86" --package "system-images;android-30;google_apis_playstore;x86" --device "Nexus 6"

    # Step 7: Wait for Emulator to Boot
    - name: Wait for Emulator to Boot
      run: |
        adb wait-for-device
        adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
        sleep 30 # Additional delay to ensure the system is fully initialized

    # Step 8: Disable Animations
    - name: Disable Animations
      run: |
        adb shell settings put global window_animation_scale 0.0
        adb shell settings put global transition_animation_scale 0.0
        adb shell settings put global animator_duration_scale 0.0

    # Step 9: Install APK on Emulator
    - name: Install APK on Emulator
      run: |
        adb install ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk

    # Step 10: Start Appium Server
    - name: Start Appium server
      run: |
        npm install -g appium@2
        appium --base-path /wd/hub &
        # Wait for Appium to start
        for i in {1..10}; do
          if curl -s localhost:4723/wd/hub/status | grep -q "status"; then
            echo "Appium server started"
            break
          fi
          sleep 5
        done

    # Step 11: Run WebDriverIO Tests
    - name: Run WebDriverIO tests
      run: |
        npx wdio run ./wdio.ci.conf.js

    # Step 12: Force Stop Emulator
    - name: Force Stop Emulator
      run: |
        adb emu kill
        pkill -f "emulator" || true