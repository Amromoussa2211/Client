name: Android Emulator Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Create log directory
        run: mkdir -p logs

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'
        run: |
          npm -v > logs/nodejs_setup.log
          echo "Node.js setup completed" >> logs/nodejs_setup.log

      - name: Install dependencies
        run: |
          npm ci > logs/dependencies_install.log 2>&1
          echo "Dependencies installation completed" >> logs/dependencies_install.log

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
        run: |
          java -version > logs/jdk_setup.log
          echo "JDK setup completed" >> logs/jdk_setup.log

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 'latest'
          accept-android-sdk-licenses: true
        run: |
          sdkmanager --list > logs/android_sdk_setup.log
          echo "Android SDK setup completed" >> logs/android_sdk_setup.log

      - name: Enable KVM
        run: |
          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
          sudo udevadm control --reload-rules
          sudo udevadm trigger --name-match=kvm
          echo "KVM enabled" > logs/kvm_setup.log

      - name: Cache AVD
        uses: actions/cache@v4
        id: avd-cache
        with:
          path: |
            ~/.android/avd/*
            ~/.android/adb*
          key: avd-30
        run: |
          ls ~/.android/avd > logs/avd_cache.log
          echo "AVD cache setup completed" >> logs/avd_cache.log

      - name: Update SDK and clear cache
        run: |
          yes | sdkmanager --update > logs/sdk_update.log 2>&1
          yes | sdkmanager --uninstall "build-tools;35.0.0" "platform-tools" "platforms;android-30" "system-images;android-30;google_apis;x86_64" >> logs/sdk_update.log 2>&1
          yes | sdkmanager --install "build-tools;35.0.0" "platform-tools" "platforms;android-30" "system-images;android-30;google_apis;x86_64" >> logs/sdk_update.log 2>&1
          echo "SDK update and cache cleared" >> logs/sdk_update.log

      - name: Run tests on emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis
          arch: x86_64
          profile: Nexus 6
          emulator-options: -no-window -gpu swiftshader -noaudio -no-boot-anim
        run: |
          set -e
          mkdir -p apps
          curl -L -o ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk https://github.com/Amromoussa2211/client/releases/download/v1.0.0/app-release-v15-0.3.2-2024-12-25-18-13.apk > logs/emulator_run.log 2>&1
          adb install ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk >> logs/emulator_run.log 2>&1
          adb wait-for-device >> logs/emulator_run.log 2>&1
          echo "Emulator is ready" >> logs/emulator_run.log

          npm install -g appium@2 --quiet >> logs/emulator_run.log 2>&1
          appium --base-path /wd/hub & >> logs/emulator_run.log 2>&1
          sleep 10
          echo "Appium server started" >> logs/emulator_run.log

          npx wdio run ./wdio.ci.conf.js >> logs/emulator_run.log 2>&1
          adb logcat -d > logs/adb_logcat.txt
          killall -s SIGTERM node
          sleep 5
          killall -s SIGKILL node
          echo "Appium logs saved" >> logs/emulator_run.log

          adb emu kill
          pkill -f "emulator" || true
          echo "Emulator terminated" >> logs/emulator_run.log

      - name: Archive logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: logs
          path: |
            logs
