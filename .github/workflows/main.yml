name: Android Tests

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 'latest'
          accept-android-sdk-licenses: true

      - name: Start Emulator
        uses: reactivecircus/android-emulator-runner@v2
        with:
          api-level: 30
          target: google_apis_playstore # Use a faster system image
          arch: x86_64
          profile: Nexus 5 # Use a lighter profile
          emulator-options: -no-window -gpu swiftshader -noaudio -no-boot-anim -memory 2048 -cores 2 -skin 480x800 -snapshot default
          script: |
            set -e
            mkdir -p apps
            curl -L -o ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk https://github.com/Amromoussa2211/client/releases/download/v1.0.0/app-release-v15-0.3.2-2024-12-25-18-13.apk
            adb install ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk

            # Restart ADB server
            adb kill-server
            adb start-server

            # Wait for emulator to boot
            for i in {1..60}; do
              adb devices | grep -q "emulator-5554.*device" && break
              echo "Waiting for emulator to boot... (attempt $i)"
              sleep 10
            done

            # Wait for boot to complete
            for i in {1..60}; do
              adb -s emulator-5554 shell getprop sys.boot_completed | grep -q "1" && break
              echo "Waiting for emulator to complete boot... (attempt $i)"
              sleep 10
            done

            echo "Emulator is ready"

      - name: Start Appium server
        run: |
          npm install -g appium@2 --quiet
          appium --base-path / &

      - name: Wait for Appium server to start
        run: |
          for i in {1..30}; do
            if curl -s localhost:4723/status | grep -q "status"; then
              echo "Appium server started"
              break
            fi
            echo "Waiting for Appium server to start..."
            sleep 2
          done

      - name: Run tests
        run: |
          npx wdio run ./wdio.ci.conf.js || { echo "Tests failed"; exit 1; }

      - name: Terminate Emulator
        run: |
          adb emu kill
          pkill -f "emulator" || true