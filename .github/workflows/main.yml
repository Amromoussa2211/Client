name: Android Emulator CI with WebDriverIO

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Set up Android environment variables
        run: |
          echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
          mkdir -p $ANDROID_HOME

      - name: Set up Android Command Line Tools
        run: |
          wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O android-sdk.zip
          mkdir -p $ANDROID_HOME/cmdline-tools
          unzip android-sdk.zip -d $ANDROID_HOME/cmdline-tools
          mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
          echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
          echo "$ANDROID_HOME/emulator" >> $GITHUB_PATH
          echo "$ANDROID_HOME/platform-tools" >> $GITHUB_PATH
          rm android-sdk.zip

      - name: Verify sdkmanager is in PATH
        run: |
          which sdkmanager

      - name: Update SDK Repositories
        run: |
          mkdir -p $ANDROID_HOME/repositories.cfg
          touch $ANDROID_HOME/repositories.cfg
          yes | sdkmanager --update

      - name: Install Required SDK Components
        run: |
          yes | sdkmanager --install "system-images;android-28;default;armeabi-v7a"
          yes | sdkmanager --install "emulator"
          yes | sdkmanager --install "platform-tools"
          yes | sdkmanager --install "platforms;android-28"

      - name: Verify SDK Setup
        run: |
          ls -la $ANDROID_HOME/platforms

      - name: Verify emulator and adb are in PATH
        run: |
          which emulator
          which adb

      - name: Create and Start Emulator
        run: |
          echo no | avdmanager create avd --force -n test --abi "default/armeabi-v7a" --package "system-images;android-28;default;armeabi-v7a" --device "Nexus 6"
          emulator -avd test -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -no-snapshot -memory 2048 -cores 2 &
          adb wait-for-device
          adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
          sleep 30 # Wait for the emulator to fully boot

      - name: Disable Animations
        run: |
          adb shell settings put global window_animation_scale 0.0
          adb shell settings put global transition_animation_scale 0.0
          adb shell settings put global animator_duration_scale 0.0

      - name: Download APK
        run: |
          mkdir -p ./apps
          curl -L -o ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk https://github.com/Amromoussa2211/client/releases/download/v1.0.0/app-release-v15-0.3.2-2024-12-25-18-13.apk

      - name: Install APK on Emulator
        run: |
          adb install ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk

      - name: Start Appium server
        run: |
          npm install -g appium@2
          appium --base-path /wd/hub &
          for i in {1..10}; do
            if curl -s localhost:4723/wd/hub/status | grep -q "status"; then
              echo "Appium server started"
              break
            fi
            sleep 5
          done

      - name: Run WebDriverIO tests
        run: |
          npx wdio run ./wdio.ci.conf.js

      - name: Force Stop Emulator
        run: |
          adb emu kill
          pkill -f "emulator" || true
