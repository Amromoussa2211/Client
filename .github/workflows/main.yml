name: Android E2E Tests (Capture Failed Logs)

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  e2e-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3
        with:
          cmdline-tools-version: 'latest'
          accept-android-sdk-licenses: true
          packages: platform-tools platforms;android-30 build-tools;33.0.0 emulator system-images;android-30;google_apis;x86

      - name: Create AVD
        run: |
          echo "no" | $ANDROID_HOME/cmdline-tools/latest/bin/avdmanager create avd --name testAVD --package 'system-images;android-30;google_apis;x86' --force

      - name: Fix KVM permissions
        run: |
          sudo apt-get update -y
          sudo apt-get install -y qemu-kvm libvirt-daemon-system libvirt-clients bridge-utils
          sudo gpasswd -a $USER kvm
          sudo chmod 666 /dev/kvm

      - name: Start Emulator
        run: |
          nohup $ANDROID_HOME/emulator/emulator -avd testAVD -no-audio -no-window -gpu swiftshader_indirect -memory 2048 -cores 2 &
          sleep 600  # Wait for 10 minutes

      - name: Wait for Device
        run: adb wait-for-device

      - name: List ADB Devices
        run: adb devices

      - name: Install Dependencies
        run: npm install

      - name: Download and Install APK
        run: |
          mkdir -p apps
          curl -L -o ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk https://github.com/Amromoussa2211/client/releases/download/v1.0.0/app-release-v15-0.3.2-2024-12-25-18-13.apk
          adb install ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk

      - name: Verify APK Installation
        run: |
          adb shell pm list packages | grep com.willma.client.staging
          if [ $? -eq 0 ]; then
            echo "APK installed successfully."
          else
            echo "APK installation failed."
            exit 1
          fi

      - name: Start Appium
        run: |
          npm run start:appium > appium.log 2>&1 &  # Start Appium and redirect logs to a file
          sleep 30  # Wait for Appium to start

      - name: Verify Appium is Running
        run: |
          if grep -q "Appium REST http interface listener started on" appium.log; then
            echo "Appium is running and ready."
          else
            echo "Appium is not running or not ready."
            cat appium.log  # Print Appium logs for debugging
            exit 1
          fi

      - name: Run Tests
        run: npm run test:ci

      - name: Capture Failed Logs
        if: failure()  # Run this step only if the previous step fails
        run: |
          # Capture Appium logs
          mkdir -p logs
          cp appium.log logs/appium_failure.log

          # Capture device logs (logcat) with error-level filtering
          adb logcat -d -v time *:E > logs/device_failure.log

      - name: Upload Failed Logs as Artifacts
        if: failure()  # Run this step only if the previous step fails
        uses: actions/upload-artifact@v3
        with:
          name: failed-logs
          path: logs/

      - name: Upload Screenshots as Artifacts
        if: always()  # Run this step even if previous steps fail
        uses: actions/upload-artifact@v3
        with:
          name: test-screenshots
          path: screenshots/