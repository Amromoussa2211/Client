name: Android E2E Tests with Appium 2

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  android-emulator-e2e-tests:
    runs-on: macos-latest  # macOS for better hardware acceleration support

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Java (JDK 17 or higher)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    # Step 3: Set up Node.js (v18)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'

    # Step 4: Install Android SDK and Tools
    - name: Install Android SDK
      uses: android-actions/setup-android@v2

    # Step 5: Install Appium and WebdriverIO Dependencies
    - name: Install Dependencies
      run: |
        npm install
        npm install -g appium@latest

    # Step 6: Launch Android Emulator
    - name: Launch Android Emulator
      uses: ReactiveCircus/android-emulator-runner@v2
      with:
        api-level: 30
        target: google_apis
        arch: x86_64
        profile: Pixel_4_API_30
        emulator-options: -no-window -no-audio -gpu swiftshader_indirect -no-boot-anim
        disable-animations: true
        force-avd-creation: true
        cores: 2
        avd-name: test
        emulator-boot-timeout: 1800  # Increased timeout to 1800 seconds (30 minutes)
        emulator-port: 5554
        script: echo "Dummy script"  # Provide a dummy script to bypass the error

    # Step 7: Debug Emulator Startup
    - name: Debug Emulator Startup
      run: |
        $ANDROID_SDK_ROOT/emulator/emulator -avd test -no-window -no-audio -gpu swiftshader_indirect -no-boot-anim &
        sleep 120  # Wait for 2 minutes
        adb devices

    # Step 8: Check Emulator Logs
    - name: Check Emulator Logs
      run: |
        cat /Users/runner/.android/avd/test.avd/logcat.log

    # Step 9: Download and Install APK
    - name: Download and Install APK
      run: |
        mkdir -p apps
        curl -L -o ./apps/app-release.apk https://github.com/Amromoussa2211/client/releases/download/v1.0.0/app-release-v15-0.3.2-2024-12-25-18-13.apk
        adb wait-for-device
        adb install ./apps/app-release.apk

    # Step 10: Start Appium Server
    - name: Start Appium Server
      run: |
        appium --base-path / --port 4723 --log-level error &
        sleep 10  # Wait for Appium to start

    # Step 11: Run WebdriverIO Tests
    - name: Run WebdriverIO Tests
      env:
        DEVICE_NAME: "emulator-5554"
        APK_PATH: "./apps/app-release.apk"
        APPIUM_HOST: "localhost"
        APPIUM_PORT: "4723"
        APPIUM_PATH: "/"
      run: npm run test:ci

    # Step 12: Generate Allure Report
    - name: Generate Allure Report
      run: |
        npm run generate-report

    # Step 13: Archive Allure Report
    - name: Archive Allure Report
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: allure-report/

    # Step 14: Verify Emulator is Running
    - name: Verify Emulator is Running
      run: |
        adb devices
        adb -s emulator-5554 shell getprop ro.boot.completed

    # Step 15: Terminate Emulator
    - name: Terminate Emulator
      run: |
        if adb devices | grep -q "emulator-5554"; then
          adb -s emulator-5554 emu kill
        else
          echo "Emulator is not running, skipping termination."
        fi