name: Android E2E Tests with Emulator

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  android-e2e-tests:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout Code
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Java (JDK 17 or higher)
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    # Step 3: Set up Node.js (v18)
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18
        cache: 'npm'

    # Step 4: Install Android SDK and Tools
    - name: Install Android SDK
      uses: android-actions/setup-android@v2

    # Step 5: Clear npm Cache
    - name: Clear npm Cache
      run: |
        npm cache clean --force

    # Step 6: Install Dependencies
    - name: Install Dependencies
      run: |
        npm config set fetch-retry-mintimeout 20000
        npm config set fetch-retry-maxtimeout 120000
        npm config set registry https://registry.npmjs.org/
        npm install

    # Step 7: Create and Launch Android Emulator
    - name: Create and Launch Emulator
      run: |
        # Install system image for Android 30 (x86_64)
        sdkmanager --install 'system-images;android-30;google_apis;x86_64'

        # Create AVD (Android Virtual Device)
        echo no | avdmanager create avd --force -n test --abi 'google_apis/x86_64' --package 'system-images;android-30;google_apis;x86_64' --device 'pixel'

        # Launch the emulator
        $ANDROID_SDK_ROOT/emulator/emulator -avd test -no-window -no-audio -gpu swiftshader_indirect -no-boot-anim &
        sleep 120  # Wait for emulator to boot

        # Verify emulator is running
        if adb devices | grep -q "emulator-5554"; then
          echo "Emulator is running."
        else
          echo "Emulator failed to start. Skipping emulator-related steps."
        fi

    # Step 8: Download APK
    - name: Download APK
      run: |
        mkdir -p apps
        curl -L -o ./apps/app-release.apk https://github.com/Amromoussa2211/client/releases/download/v1.0.0/app-release-v15-0.3.2-2024-12-25-18-13.apk

    # Step 9: Install APK on Emulator (if running)
    - name: Install APK on Emulator
      run: |
        if adb devices | grep -q "emulator-5554"; then
          adb wait-for-device
          adb install ./apps/app-release.apk
        else
          echo "Emulator not found. Skipping APK installation."
        fi

    # Step 10: Start Appium Server
    - name: Start Appium Server
      run: |
        appium --base-path / --port 4723 --log-level error &
        sleep 10  # Wait for Appium to start

    # Step 11: Run WebdriverIO Tests
    - name: Run WebdriverIO Tests
      env:
        DEVICE_NAME: "emulator-5554"  # Default emulator port
        APK_PATH: "./apps/app-release.apk"
        APPIUM_HOST: "localhost"
        APPIUM_PORT: "4723"
        APPIUM_PATH: "/"
      run: |
        if adb devices | grep -q "emulator-5554"; then
          npm run test:ci
        else
          echo "Emulator not found. Skipping tests."
        fi

    # Step 12: Generate Allure Report
    - name: Generate Allure Report
      run: |
        npm run generate-report

    # Step 13: Archive Allure Report
    - name: Archive Allure Report
      uses: actions/upload-artifact@v3
      with:
        name: allure-report
        path: allure-report/

    # Step 14: Terminate Emulator (if running)
    - name: Terminate Emulator
      run: |
        if adb devices | grep -q "emulator-5554"; then
          adb -s emulator-5554 emu kill || echo "Failed to terminate emulator. Continuing..."
        else
          echo "Emulator not found. Skipping termination."
        fi 