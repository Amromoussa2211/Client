name: Android Emulator CI with WebDriverIO

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v4

    # Step 2: Set up Node.js
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 18
        cache: 'npm'

    # Step 3: Install dependencies
    - name: Install dependencies
      run: npm ci

    # Step 4: Set up Android environment variables
    - name: Set up Android environment variables
      run: |
        echo "ANDROID_HOME=$HOME/android-sdk" >> $GITHUB_ENV
        mkdir -p $ANDROID_HOME

    # Step 5: Set up Android Command Line Tools
    - name: Set up Android Command Line Tools
      run: |
        wget https://dl.google.com/android/repository/commandlinetools-linux-9477386_latest.zip -O android-sdk.zip
        mkdir -p $ANDROID_HOME/cmdline-tools
        unzip android-sdk.zip -d $ANDROID_HOME/cmdline-tools
        mv $ANDROID_HOME/cmdline-tools/cmdline-tools $ANDROID_HOME/cmdline-tools/latest
        echo "$ANDROID_HOME/cmdline-tools/latest/bin" >> $GITHUB_PATH
        rm android-sdk.zip

    # Step 6: Verify sdkmanager is in PATH
    - name: Verify sdkmanager is in PATH
      run: |
        which sdkmanager

    # Step 7: Update SDK Repositories
    - name: Update SDK Repositories
      run: |
        mkdir -p $ANDROID_HOME/repositories.cfg
        touch $ANDROID_HOME/repositories.cfg
        yes | sdkmanager --update

    # Step 8: Set up Android SDK
    - name: Set up Android SDK
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        target: google_apis_playstore # Use Google APIs with Play Store
        arch: x86
        profile: Nexus 6
        avd-name: test
        emulator-options: "-no-window -gpu swiftshader_indirect -noaudio -no-boot-anim -no-snapshot -memory 1024 -cores 1"
        disable-animations: true
        script: |
          sdkmanager --install "system-images;android-30;google_apis_playstore;x86"
          sdkmanager --install "emulator"
          sdkmanager --install "platform-tools"
          echo no | avdmanager create avd --force -n test --abi "google_apis_playstore/x86" --package "system-images;android-30;google_apis_playstore;x86" --device "Nexus 6"

    # Step 9: Restart ADB
    - name: Restart ADB
      run: |
        adb kill-server
        adb start-server

    # Step 10: Wait for Emulator to Boot
    - name: Wait for Emulator to Boot
      run: |
        adb wait-for-device
        adb shell 'while [[ -z $(getprop sys.boot_completed) ]]; do sleep 1; done'
        sleep 60 # Increase the delay to 60 seconds

    # Step 11: Disable Animations
    - name: Disable Animations
      run: |
        adb shell settings put global window_animation_scale 0.0
        adb shell settings put global transition_animation_scale 0.0
        adb shell settings put global animator_duration_scale 0.0

    # Step 12: Check if APK is Installed
    - name: Check if APK is Installed
      id: check-apk
      run: |
        if adb shell pm list packages | grep -q "com.willma.client.staging"; then
          echo "APK is already installed."
          echo "skip_apk_install=true" >> $GITHUB_ENV
        else
          echo "APK is not installed."
          echo "skip_apk_install=false" >> $GITHUB_ENV
        fi

    # Step 13: Download APK
    - name: Download APK
      run: |
        mkdir -p ./apps
        curl -L -o ./apps/app-release-v15-0.3.2-2024-12-25-18-13.apk https://github.com/Amromoussa2211/client/releases/download/v1.0.0/app-release-v15-0.3.2-2024-12-25-18-13.apk

    # Step 14: Install APK on Emulator
    - name: Install APK on Emulator
      if: env.skip_apk_install == 'false'
      run: |
        adb install ./apps/app-release